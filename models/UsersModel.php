<?phpinclude ('ConnectModel.php');    class UsersModel extends ConnectModel    {        public function checkLogin($login, $pass, $email)        {            $stmt = $this->db->prepare("SELECT name, pwd, active FROM users WHERE name =? AND pwd = ? AND email  = ?");            $passmd5=md5($pass."vagrant");            $stmt->bindParam(1, $login, PDO::PARAM_STR);            $stmt->bindParam(2, $passmd5, PDO::PARAM_STR);            $stmt->bindParam(3, $email, PDO::PARAM_STR);            $stmt->execute();            $active = $stmt->fetch(PDO::FETCH_ASSOC);                        if (!empty($active) && $active['active']==1)            {                $_SESSION['id'] = $active['name'];                return $active['name'];            }            return false;                  }        public function addUser($login, $pass, $email,$hash)        {            $pass = md5($pass."vagrant");            $stmt = $this->db->prepare("INSERT INTO users (name, pwd, email, hash) VALUES (?,?,?,?)");            $stmt->bindParam(1, $login, PDO::PARAM_STR);            $stmt->bindParam(2, $pass, PDO::PARAM_STR);            $stmt->bindParam(3, $email, PDO::PARAM_STR);            $stmt->bindParam(4, $hash, PDO::PARAM_STR);            $stmt->execute();            return true;        }        public function addImgUsr($img,$id)        {            $stmt = $this->db->prepare("UPDATE users set img = ? WHERE id_user = ?");            $stmt->bindParam(1, $img, PDO::PARAM_STR);            $stmt->bindParam(2, $id, PDO::PARAM_STR);            $stmt->execute();            return true;        }        public function getIduser($login)        {            $stmt = $this->db->prepare("SELECT id_user from users where name = ?");            $stmt->bindParam(1,$login, PDO::PARAM_STR);            $stmt->execute();            while($idArray = $stmt->fetch(PDO::FETCH_ASSOC))            {                $idUser = $idArray['id_user'];            }            return $idUser;        }        public function addComment($comment, $idUser, $headline, $date)        {            $stmt = $this->db->prepare("INSERT INTO comments (comment, id_user, headline, date) VALUES (?,?,?,?)");                        $stmt->bindParam(1, $comment, PDO::PARAM_STR);            $stmt->bindParam(2, $idUser, PDO::PARAM_STR);            $stmt->bindParam(3, $headline, PDO::PARAM_STR);            $stmt->bindParam(4, $date, PDO::PARAM_STR);            $result = $stmt->execute();            return true;        }        public function editComment($id)        {            $stmt = $this->db->prepare("SELECT comment, id FROM comments where id = ?");            $stmt->bindParam(1, $id, PDO::PARAM_INT);            $stmt->execute();            while($commentArray = $stmt->fetch(PDO::FETCH_ASSOC))            {                $comment=$commentArray['comment'];            }            return $comment;        }        public function checkLoginDb($login)        {            $stmt = $this->db->prepare("SELECT name FROM users WHERE name = ?");            $stmt->bindParam(1, $login, PDO::PARAM_STR);                    $stmt->execute();            $numRows = $stmt->fetchColumn();            return $numRows;        }        public function checkEmailDb($email)        {            $stmt1 = $this->db->prepare("SELECT email FROM users WHERE email = ?");            $stmt1->bindParam(1,$email, PDO::PARAM_STR);            $stmt1->execute();            $rowEmail = $stmt1->fetchColumn();            return $rowEmail;        }        public function checkActive($email,$hash)        {            $stmt = $this->db->prepare("SELECT email, hash, active FROM users WHERE email = ? AND hash = ?");            $stmt->bindParam(1, $email, PDO::PARAM_INT);            $stmt->bindParam(2, $hash, PDO::PARAM_INT);            $stmt->execute();            $emailArray = $stmt->fetch(PDO::FETCH_ASSOC);            return $emailArray;        }        public function Active($email,$hash)        {            $stmt = $this->db->prepare("UPDATE users SET active = '1' WHERE email = ? AND hash = ?");            $stmt->bindParam(1, $email, PDO::PARAM_INT);            $stmt->bindParam(2, $hash, PDO::PARAM_INT);            $stmt->execute();            return true;        }        public function getImage($id)        {            $stmt = $this->db->prepare("SELECT img FROM users where id_user = ?");            $stmt->bindParam(1, $id, PDO::PARAM_INT);            $stmt->execute();            while($array = $stmt->fetch(PDO::FETCH_ASSOC))            {                $imgUrl=$array['img'];            }            return $imgUrl;        }        public function getLastId()        {            $stmt = $this->db->prepare("SELECT MAX(id_user) as maxid from users");            $stmt->execute();            $lastId = (integer) $stmt->fetch(PDO::FETCH_COLUMN);            return $lastId;        }    }?>